version: 0.2

phases:
  pre_build:
    commands:
      - echo Logging into Docker Hub...
      - export DOCKER_PASSWORD=Meghana@95
      - export DOCKER_USERNAME=meghanadixit95
      - echo "$DOCKER_PASSWORD" | docker login --username "$DOCKER_USERNAME" --password-stdin
      - echo Logging in to Amazon ECR...
      - aws --version
      - export AWS_REGION=us-east-1
      - export AWS_ACCOUNT_ID=324037300860
      - echo "accountID- $AWS_ACCOUNT_ID"
      - export REPOSITORY_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/tekarch-datastore
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $REPOSITORY_URI
      - echo Granting execution permissions to Gradle wrapper...
      - chmod +x gradlew

  build:
    commands:
      - echo Build started on date
      - echo Building the Docker image...
      - export IMAGE_REPO_NAME=tekarch-datastore
      - export IMAGE_TAG=latest
      - docker build -t $IMAGE_REPO_NAME:$IMAGE_TAG .
      - ./gradlew clean build --warning-mode all

  post_build:
    commands:
      - echo Tagging the Docker image...
      - echo "post-build img-repo $IMAGE_REPO_NAME"
      - echo "post-build accID $AWS_ACCOUNT_ID and region $AWS_REGION"
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $REPOSITORY_URI:$IMAGE_TAG
      - echo Pushing the Docker image to AWS ECR...
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo Writing image definitions file...
      - printf '[{"name":"taf-userservice-service","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
      - echo Writing image definitions file...
      - export DOCKER_CONTAINER_NAME=tekarch-datastore
      - printf '[{"name":"%s","imageUri":"%s"}]' $DOCKER_CONTAINER_NAME $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
      - echo $DOCKER_CONTAINER_NAME
      - echo Build process completed successfully.
      - echo Printing imagedefinitions.json
      - cat imagedefinitions.json

artifacts:
  files:
    - imagedefinitions.json
    - build/libs/*.jar
